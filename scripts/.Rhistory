knitr::opts_chunk$set(echo = FALSE)
library(here)
library(tidyverse)
library(magrittr)
library(ggplot2)
library(readr)
library(readxl)
library(janitor)
## to install dada2
# if (!requireNamespace("BiocManager", quietly = TRUE))
#     install.packages("BiocManager")
# BiocManager::install("dada2", version = "3.14")
library(dada2)
dat <- readxl::read_excel(here::here("data","miseq_run_stats","Run1_DemultiplexingStats.xlsx"))
head(dat)
colnames(dat)
dat %<>% filter(!is.na(name2)) %>% filter(name3 != "all") %>%
dplyr::select(-c(flowcell-id,PerfectBarcodeCount,OneMismatchBarcodeCount))
dat %<>% filter(!is.na(name2)) %>% filter(name3 != "all") %>%
dplyr::select(-c(`flowcell-id`,PerfectBarcodeCount,OneMismatchBarcodeCount))
View(dat)
?rename
dat %<>% rename(miseq_id=name2,barcode=name3,nreads=BarcodeCount) %>% dplyr::select(-name,-number) %>%
separate(miseq_id, into=c("sample_name","site","sample_id"), sep="_", remove=FALSE)
dat %<>% filter(!is.na(site)) %>% separate(sample_id, into=c("sample_id","rep"), remove=TRUE, sep="-")
dat <- readxl::read_excel(here::here("data","miseq_run_stats","Run1_DemultiplexingStats.xlsx"))
head(dat)
dat %<>% filter(!is.na(name2)) %>% filter(name3 != "all") %>%
dplyr::select(-c(`flowcell-id`,PerfectBarcodeCount,OneMismatchBarcodeCount))
dat %<>% rename(miseq_id=name2,barcode=name3,nreads=BarcodeCount) %>% dplyr::select(-name,-number) %>%
separate(miseq_id, into=c("sample_name","site","sample_id"), sep="_", remove=FALSE)
dat %<>% filter(!is.na(sample_id)) %>% separate(sample_id, into=c("sample_id","rep"), remove=TRUE, sep="-")
fig1a <- ggplot(dat, aes(x=nreads/1000)) +
geom_vline(aes(xintercept=140), lty=2) +
labs(x="Reads per Sample (x1000)", y="No. Samples",
title="All Samples",
subtitle="MiSeq 2x300") +
theme_classic() + theme(axis.text.x=element_text(size=12),
axis.title=element_text(size=14),
title=element_text(size=16))
fig1a
fig1a <- ggplot(dat, aes(x=nreads/1000)) + geom_histogram() +
geom_vline(aes(xintercept=140), lty=2) +
labs(x="Reads per Sample (x1000)", y="No. Samples",
title="All Samples",
subtitle="MiSeq 2x300") +
theme_classic() + theme(axis.text.x=element_text(size=12),
axis.title=element_text(size=14),
title=element_text(size=16))
fig1a
fig1a <- ggplot(dat, aes(x=nreads/1000)) + geom_histogram() +
geom_vline(aes(xintercept=140), lty=2) +
labs(x="Reads per Sample (x1000)", y="No. Samples",
title="All Samples",
subtitle="MiSeq 2x300") +
theme_classic() + theme(axis.text.x=element_text(size=12),
axis.title=element_text(size=14),
title=element_text(size=16))
fig1a
fig1a <- ggplot(dat, aes(x=nreads/1000)) + geom_histogram() +
geom_vline(aes(xintercept=140), lty=2) +
labs(x="Reads per Sample (x1000)", y="No. Samples",
title="All Samples",
subtitle="MiSeq 2x300") +
theme_classic() + theme(axis.text.x=element_text(size=12),
axis.title=element_text(size=14),
title=element_text(size=16))
fig1a
fig2 <- ggplot(dat, aes(x=site, y=nreads/1000, fill=site)) +
geom_boxplot(alpha=0.8) +
geom_hline(aes(yintercept=70), lty=2, col="grey45") +
geom_hline(aes(yintercept=140), lty=2, col="grey45") +
geom_point(aes(fill=site), alpha=0.4) +
labs(y="Reads per Sample (x1000)", x="Site",
title="All Samples",
subtitle="MiSeq 2x300") +
theme_bw() + theme(axis.text.x=element_text(size=11, angle=90, hjust=1,vjust=0.5),
axis.title=element_text(size=12),
strip.text=element_text(size=11),
title=element_text(size=14),
legend.title=element_blank())
fig2
fig2 <- ggplot(dat, aes(x=site, y=nreads/1000, fill=site)) +
geom_boxplot(alpha=0.8) +
geom_hline(aes(yintercept=70), lty=2, col="grey45") +
geom_hline(aes(yintercept=140), lty=2, col="grey45") +
geom_point(aes(fill=site), alpha=0.4) +
labs(y="Reads per Sample (x1000)", x="Site",
title="All Samples Run 1",
subtitle="MiSeq 2x300") +
theme_bw() + theme(axis.text.x=element_text(size=11, angle=90, hjust=1,vjust=0.5),
axis.title=element_text(size=12),
strip.text=element_text(size=11),
title=element_text(size=14),
legend.title=element_blank())
fig2
fig1a <- ggplot(dat, aes(x=nreads/1000)) + geom_histogram() +
geom_vline(aes(xintercept=140), lty=2) +
labs(x="Reads per Sample (x1000)", y="No. Samples",
title="All Samples Run 1",
subtitle="MiSeq 2x300") +
theme_classic() + theme(axis.text.x=element_text(size=12),
axis.title=element_text(size=14),
title=element_text(size=16))
fig1a
dat %>% filter(nreads==0)
dat %>% filter(nreads > 500000)
dat %>% filter(nreads > 400000)
write_csv(dat, file=here("data","miseq_run_stats","Run1_DemultiplexingStats.csv"), row.names=FALSE)
write_csv(dat, file=here("data","miseq_run_stats","Run1_DemultiplexingStats.csv"), rownames=FALSE)
write_csv(dat, file=here("data","miseq_run_stats","Run1_DemultiplexingStats.csv"))
dat %>% filter(nreads <= 20000)
fig2
dat %>% filter(nreads <= 40000)
dat %>% filter(nreads <= 20000)
dat %>% filter(nreads > 400000)
fastq_dir       <- "data/raw"
## forward file names
ffilenames <- list.files(path = here(fastq_dir),
pattern="*R1_001.fastq.gz")
## reverse file names
rfilenames <- list.files(path = here(fastq_dir),
pattern="*R2_001.fastq.gz")
file.metadata <- bind_cols("file1"=ffilenames,"file2"=rfilenames) %>%
mutate(file1=paste0(here(fastq_dir),"/",file1),
file2=paste0(here(fastq_dir),"/",file2))
# grab forward and reverse file names for four unique samples/replicates. This assumes each sample has 3 replicates (a/b/c).
rows_to_subset <- seq(from=1,to=dim(file.metadata)[1]-3,by=3); rows_to_subset=sample(rows_to_subset, size=4)
subset <- file.metadata %>% slice(rows_to_subset)
subset
subset %>% pull(file1) %>%
plotQualityProfile(.)
subset %>% pull(file2) %>%
plotQualityProfile(.)
